parameters:
    # Adds a fallback DATABASE_URL if the env var is not set.
    # This allows you to run cache:warmup even if your
    # environment variables are not available yet.
    # You should not need to change this value.
    env(DATABASE_URL): ''

doctrine:
    dbal:
        driver: 'pdo_postgresql'
        server_version: '10.5'
        charset: utf8
        default_table_options:
            charset: utf8
        schema_filter: ~^(?!deck.sessions)~ #ignore those tables when generating migrations
        url: '%env(DATABASE_DB_TYPE)%://%env(DATABASE_USER)%:%env(DATABASE_PASSWORD)%@%env(DATABASE_DB_HOST)%:%env(DATABASE_PORT)%/%env(DATABASE_DB)%'
        types:
            email: Deck\Infrastructure\Persistence\Type\User\DoctrineEmailType
            hashed_password: Deck\Infrastructure\Persistence\Type\User\DoctrineHashedPasswordType
            aggregate_id: Deck\Infrastructure\Persistence\Type\Shared\DoctrineAggregateIdType
            player_id: Deck\Infrastructure\Persistence\Type\User\DoctrinePlayerIdType
            game_id: Deck\Infrastructure\Persistence\Type\Game\DoctrineGameIdType
            datetime: Deck\Infrastructure\Persistence\Type\Shared\DoctrineDateTimeType

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: false
        mappings:
            game:
                type: yml
                dir: "%kernel.root_dir%/../src/Infrastructure/Persistence/Mapping/Game"
                prefix: Deck\Domain\Game
                is_bundle: false
            event:
                type: yml
                dir: "%kernel.root_dir%/../src/Infrastructure/Persistence/Mapping/Event"
                prefix: Deck\Domain\Event
                is_bundle: false
            user:
                type: yml
                dir: "%kernel.root_dir%/../src/Infrastructure/Persistence/Mapping/User"
                prefix: Deck\Domain\User
                is_bundle: false
