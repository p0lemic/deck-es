# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'es'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false
        bind:
            $commandBus: '@simple_bus.command_bus'
            $eventBus: '@broadway.event_handling.event_bus'
            $eventStore: '@Broadway\EventStore\Dbal\DBALEventStore'

    _instanceof:
        Broadway\EventHandling\EventListener:
            public: true
            tags:
                - { name: broadway.domain.event_listener }

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    Deck\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    Deck\Infrastructure\Ui\Http\Controller\:
        resource: '../src/Infrastructure/Ui/Http/Controller/*'
        tags: ['controller.service_arguments']


    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler:
        arguments:
            - '%env(DATABASE_DB_TYPE)%:host=%env(DATABASE_DB_HOST)%;port=%env(DATABASE_PORT)%;dbname=%env(DATABASE_DB)%'
            - { db_username: '%env(DATABASE_USER)%', db_password: '%env(DATABASE_PASSWORD)%', db_table: 'deck.sessions' }

    Deck\Application\User\SignUpHandler:
        tags:
            - { name: command_handler, handles: Deck\Application\User\SignUpCommand }
    Deck\Application\User\SignInHandler:
        tags:
            - { name: command_handler, handles: Deck\Application\User\SignInCommand }
    Deck\Application\Table\CreateTableHandler:
        tags:
            - { name: command_handler, handles: Deck\Application\Table\CreateTableCommand }
    Deck\Application\Table\JoinTableHandler:
        tags:
            - { name: command_handler, handles: Deck\Application\Table\JoinTableCommand }
    Deck\Application\Game\CreateGameHandler:
        tags:
            - { name: command_handler, handles: Deck\Application\Game\CreateGameCommand }
    Deck\Application\Game\DrawCardHandler:
        tags:
            - { name: command_handler, handles: Deck\Application\Game\DrawCardCommand }
