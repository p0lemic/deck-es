version: '3.7'

services:
  php:
    build:
      dockerfile: docker/dev/php/Dockerfile
      context: .
    container_name: deck-php
    expose:
      - 80
    ports:
      - 8080:80
    volumes:
      - .:/var/www/deck
    working_dir: /var/www/deck
    links:
      - deck_database
    environment:
      AMQP_URL: 'amqp://rabbitmq?connection_attempts=5&retry_delay=5'
      PHP_IDE_CONFIG: 'serverName=Dev'
      XDEBUG_REMOTE_HOST: 'docker.for.mac.host.internal'

  php_test:
    build:
      dockerfile: docker/dev/php/Dockerfile
      context: .
    container_name: deck-php-test
    volumes:
      - .:/var/www/deck
    working_dir: /var/www/deck
    links:
      - deck_database
    environment:
      AMQP_URL: 'amqp://rabbitmq?connection_attempts=5&retry_delay=5'
      PHP_IDE_CONFIG: 'serverName=Test'
      XDEBUG_REMOTE_HOST: 'docker.for.mac.host.internal'

  deck_database:
    image: postgres:9.6.6
    container_name: deck-database
    expose:
      - 5432
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=pass
      - POSTGRES_DB=deck
    volumes:
      - database:/var/lib/postgresql/data

  rabbitmq:
    image: 'rabbitmq:3.6-management-alpine'
    ports:
      # The standard AMQP protocol port
      - '5672:5672'
      # HTTP management UI
      - '15672:15672'

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.0
    container_name: elasticsearch
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.4.0
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
      
  logstash:
    container_name: logstash
    build:
      dockerfile: docker/dev/logstash/Dockerfile
      context: .
    volumes:
      - ./var/log:/var/log/deck:ro
    ports:
      - "5000:5000"
      - "9600:9600"
      - "5044:5044"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    depends_on:
      - elasticsearch

  filebeat:
    user: root
    container_name: filebeat
    image: docker.elastic.co/beats/filebeat:7.4.0
    depends_on:
      - logstash
    volumes:
      - /var/run/docker.sock:/host_docker/docker.sock
      - /var/lib/docker:/host_docker/var/lib/docker
      - ./var/log:/var/log/deck:ro
      - ./docker/dev/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
    command: ["--strict.perms=false"]
    ulimits:
      memlock:
        soft: -1
        hard: -1

volumes:
  elasticsearch-data:
    driver: local
  database:
    driver: local
